---
# tasks file for python_pip

- name: Import assert.yml
  ansible.builtin.import_tasks:
    file: assert.yml
  run_once: true
  delegate_to: localhost

- name: Install python pip
  ansible.builtin.package:
    name: "{{ python_pip_packages }}"
    state: present

- name: Configure pip proxy
  community.general.ini_file:
    path: /etc/pip.conf
    section: global
    option: index-url
    value: "{{ python_pip_proxy }}"
    mode: "0644"
  when:
    - python_pip_proxy is defined

- name: Trust hosts
  community.general.ini_file:
    path: /etc/pip.conf
    section: global
    option: trusted-host
    value: "{{ python_pip_trusted_host }}"
    mode: "0644"
  when:
    - python_pip_trusted_host is defined

- name: Update pip
  ansible.builtin.pip:
    name: "{{ python_pip_pip_package }}"
    state: "{{ python_pip_pip_state }}"  # noqa package-latest
    executable: "{{ python_pip_executable | default(omit) }}"
    break_system_packages: "{{ python_pip_break_flag | bool }}"
    extra_args: "{{ python_pip_extra_args | default(omit) }}"
  when:
    - python_pip_update
    - ansible_distribution_release not in [ "bookworm", "noble" ] or python_pip_break_flag | bool
    - ansible_os_family != "Alpine" or python_pip_break_flag | bool

- name: Install requested modules
  ansible.builtin.pip:
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    version: "{{ item.version | default(omit) }}"
    executable: "{{ python_pip_executable | default(omit) }}"
    break_system_packages: "{{ python_pip_break_flag | bool }}"
    extra_args: "{{ python_pip_extra_args | default(omit) }}"
  loop: "{{ python_pip_modules }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - ansible_distribution_release not in [ "bookworm", "noble" ] or python_pip_break_flag | bool
    - ansible_os_family != "Alpine" or python_pip_break_flag | bool
