---
# vars file for python_pip

_python_pip_packages:
  2:
    default:
      - python-pip
      - python-setuptools
  3:
    default:
      - python3-pip
      - python3-setuptools
    Alpine:
      - py3-pip
      - py3-setuptools
      - python3-dev

# Find the list of packages, based on the mapping above and the used python
# version used for running Ansible.
python_pip_packages: "{{ _python_pip_packages[ansible_python.version.major | int][ansible_os_family] | default(_python_pip_packages[ansible_python.version.major | int]['default'] | default(_python_pip_packages['3']['default'])) }}"

_python_pip_pip_package:
  default:
    - pip
  RedHat-7:
    - pip==20.3.4

python_pip_pip_package: "{{ _python_pip_pip_package[ansible_os_family ~ '-' ~ ansible_distribution_major_version] | default(_python_pip_pip_package['default'] ) }}"

_python_pip_pip_state:
  default: latest
  RedHat-7: present

python_pip_pip_state: "{{ _python_pip_pip_state[ansible_os_family] | default(_python_pip_pip_state['default']) }}"

# Some Ansible versions support a dedicated 'break_system_packages' boolean on the
# pip module. For broader compatibility, we also prepare a fallback extra_args.
python_pip_break_flag: "{{ python_pip_break_system_packages | default(false) }}"

_python_pip_extra_args_map:
  true: "--break-system-packages"
  false: null

python_pip_extra_args: "{{ _python_pip_extra_args_map[python_pip_break_flag | bool] }}"
